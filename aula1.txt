ATENçÃO: ESSAS SÃO ANOTAÇÕES, SEGUNDO O QUE EU ENTENDI. TALVEZ EU ESTEJA USANDO TERMOS ERRADOS, 
OU ATÉ MESMO TENHA ENTENDIDO ERRADO!

Back-End:
    O que o usuário não enxerga:
        Bancos de dados, envio de e-mails, comunicação com outros serviços (cálculo de frete, por exemplo)
        Autenticação de usuários (verificar login e senha, por exemplo)
API RESTful : o que será feito.
Front-end: 
    Interação com o usuário (web, mobile, serviços externos)
    Precisa falar a mesma linguagem, para ter uma comunicação (JSON, no caso)
    O JSON é como um objeto de JavaScript... como uma estrutura de Dados

No terminal, para criar um novo projeto (Lembrando de estar na pasta desejada - backend)
    npm init -y
Para instalar um framework, que ajuda nos caminhos do projeto
    npm install express
Criado index.js, e entra em logalhost:3333
REACT e SPA:
    Single page application, que basicamente a interação do front-end com o back-end está nos Dados
    A abordagem tradicional, quando há uma interação, uma requisição, o back-end envia tudo, a estruturação inteira
    na abordagem SPA, o back end envia apenas dados, e a atualização desses dados é feita pelo REACT, no próprio front-end
    como se na primeira, a questão de HTML e CSS estivesse no back-end, e na segunda, no próprio front-end.
Para executar, ao invés de instalar, usar npx, ao invés de npm
Para criar um projeto reactjs, na pasta desejada - aulas
    npx create-react-app NomeDoProjeto
        isso cria uma nova pasta, - frontend
EXPO: framework para integrar APIs às aplicações, sem precisar do Android Studio ou o da Apple (XStudio?)
